[{"type":"tab","id":"ce89640f.317698","label":"SensorTag"},{"type":"tab","id":"166bcb80.e99434","label":"UK Power Usage"},{"type":"tab","id":"cb3b5778.34c4a8","label":"Tweet Light"},{"type":"tab","id":"c0996fe0.3f669","label":"Toggle Light"},{"type":"tab","id":"4d7d7a75.b28284","label":"Atlas"},{"type":"tab","id":"c426c73b.3bd938","label":"Weather"},{"type":"tab","id":"f02878a0.0fd788","label":"Sentiment Meter"},{"id":"3e401463.c1bfec","type":"twitter-credentials","screen_name":"@MarkAYoder"},{"id":"54651cc0.ab9ae4","type":"websocket-listener","path":"/ws/location","wholemsg":"false"},{"id":"35c57467.ca3a8c","type":"mqtt-broker","broker":"localhost","port":"1883","clientid":"nodered"},{"id":"ba386057.845d3","type":"mqtt-broker","broker":"localhost","port":"1883"},{"id":"5b2ba16e.a4d46","type":"inject","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":137,"y":107,"z":"ce89640f.317698","wires":[["e6ac03b7.1954"]]},{"id":"b1e14e8f.4e1eb","type":"debug","name":"","active":true,"console":"false","complete":"true","x":421,"y":235,"z":"ce89640f.317698","wires":[]},{"id":"e6ac03b7.1954","type":"function","name":"","func":"// Create a Date object from the payload\nvar date = new Date(msg.payload);\n// Change the payload to be a formated Date string\nmsg.payload = date.toString();\n// Return the message so it can be sent on\nreturn msg;","outputs":1,"x":265,"y":175,"z":"ce89640f.317698","wires":[[]]},{"id":"31989c25.ce6764","type":"inject","name":"","topic":"","payload":"","payloadType":"date","repeat":"60","crontab":"","once":true,"x":129,"y":156,"z":"166bcb80.e99434","wires":[[]]},{"id":"3fabd2cd.c0542e","type":"function","name":"","func":"\t// does a simple text extract parse of the http output to provide an\n    // object containing the uk power demand, frequency and time\n    \n    if (~msg.payload.indexOf('<BR')) {\n      var words = msg.payload.split(\"div\")[1].split(\"<BR\");\n      if (words.length >= 3) {\n        msg.payload = {};\n        msg.payload.demand = parseInt(words[0].split(\":\")[1]);\n        msg.payload.frequency = parseFloat(words[2].split(\":\")[1]);\n        msg.payload.time = words[1].split(\">\")[1];\n        \n        // Create the true/false signal based on the frequency.\n        msg2 = {};\n        msg2.payload = (msg.payload.frequency >= 50) ? true : false;\n        \n        return [msg,msg2];\n      }\n    }\n    return null;","outputs":"2","x":260,"y":311,"z":"166bcb80.e99434","wires":[["d22df210.2dd21"],["2fcdbf79.d0324"]]},{"id":"d22df210.2dd21","type":"debug","name":"","active":true,"console":false,"complete":false,"x":412,"y":311,"z":"166bcb80.e99434","wires":[]},{"id":"2fcdbf79.d0324","type":"debug","name":"","active":true,"console":false,"complete":false,"x":411,"y":375,"z":"166bcb80.e99434","wires":[]},{"id":"3247212d.cdb8de","type":"http request","name":"","method":"GET","url":"    http://www.nationalgrid.com/ngrealtime/realtime/systemdata.aspx","x":230,"y":219,"z":"166bcb80.e99434","wires":[["3fabd2cd.c0542e"]]},{"id":"6c5f72ef.93a08c","type":"twitter in","twitter":"3e401463.c1bfec","tags":"#BeagleBone","user":"false","name":"Test","topic":"tweets","x":122,"y":139,"z":"cb3b5778.34c4a8","wires":[["a1a9c55e.5e5638","3e9cc639.c1633a"]]},{"id":"a1a9c55e.5e5638","type":"debug","name":"","active":true,"console":false,"complete":false,"x":412,"y":151,"z":"cb3b5778.34c4a8","wires":[]},{"id":"71e8698e.8e1798","type":"bbb-discrete-out","pin":"P8_7","inverting":false,"toggle":true,"defaultState":"0","name":"Light","x":260,"y":223,"z":"c0996fe0.3f669","wires":[[]]},{"id":"b69b6a5a.496498","type":"inject","name":"","topic":"","payload":"0","payloadType":"string","repeat":"","crontab":"","once":false,"x":103,"y":173,"z":"c0996fe0.3f669","wires":[["71e8698e.8e1798"]]},{"id":"3a4745fb.c5b8ba","type":"inject","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"x":165,"y":139,"z":"4d7d7a75.b28284","wires":[["db822907.247dd8"]]},{"id":"db822907.247dd8","type":"http request","name":"atlas build","method":"GET","url":"http://ano-atlas2.herokuapp.com/books/1234000001747/builds","x":334,"y":177,"z":"4d7d7a75.b28284","wires":[[]]},{"id":"4a81eb59.b57e14","type":"debug","name":"","active":true,"console":false,"complete":false,"x":492,"y":218,"z":"4d7d7a75.b28284","wires":[]},{"id":"3e9cc639.c1633a","type":"bbb-discrete-out","pin":"P8_7","inverting":false,"toggle":true,"defaultState":"0","name":"Light","x":329,"y":224,"z":"cb3b5778.34c4a8","wires":[[]]},{"id":"e3170740.1ce8f8","type":"inject","name":"Get forecast","topic":"","payload":"ec7eb641373d9256/forecast/q/IN/Terre_Haute.json","payloadType":"string","repeat":"","crontab":"00 12 * * *","once":false,"x":223,"y":123,"z":"c426c73b.3bd938","wires":[["a36769a3.5c9898"]]},{"id":"a36769a3.5c9898","type":"httpget","name":"Wunderground.com","baseurl":"http://api.wunderground.com/api/","append":"","x":392,"y":123,"z":"c426c73b.3bd938","wires":[["94e47347.6b1b9","dfc993bd.20367"]]},{"id":"ba5807f2.45a7f8","type":"comment","name":"Frost Warnings","info":"","x":201,"y":80,"z":"c426c73b.3bd938","wires":[]},{"id":"703a5f60.8fc5a","type":"debug","name":"","active":true,"complete":false,"x":882,"y":167,"z":"c426c73b.3bd938","wires":[]},{"id":"cddaa26a.32256","type":"function","name":"Temp Calcs","func":"var weatherDATA = msg.payload.forecast.simpleforecast.forecastday[0];\nvar lowC = weatherDATA.low.celsius;\nvar wind = weatherDATA.avewind.mph;\nvar cloud = weatherDATA.icon;\nvar kvalue = 0;\n\nvar all = {'payload': weatherDATA};\n\n//This section calculates the kvalue\nif (wind>10)  {\n\tif ((cloud == \"clear\")||(cloud == \"partlycloudy\"))  {\n\tkvalue = 3;\n\t}\n\t\telse {\n\t\tkvalue = 2;\n\t\t}\n}\n\nelse if ((wind>5) && (wind<=10)) {\n\tif ((cloud == \"clear\")||(cloud == \"partlycloudy\"))  {\n\tkvalue = 4;\n\t}\n\t\telse {\n\t\tkvalue = 2;\n\t\t}\n}\n\nelse  {\n\tif ((cloud == \"clear\")||(cloud == \"partlycloudy\"))  {\n\tkvalue = 5;\n\t}\n\t\telse {\n\t\tkvalue = 3;\n\t\t}\n}\n\n//Deduct the kvalue from lowtemp to get grasstemp\nvar grasstemp = ((lowC) - (kvalue));\n\n//Check if Grass Temp or Air Temp is zero C or below\n// if ((lowC <= 0)||(grasstemp <= 0)) {\n//If so, then send out an alert\nmsg.payload = ((\"Air temp forecast \") + (lowC) + (\"C, Grass temp forecast \" ) \n  + (grasstemp) + (\"C, predicted tonight, \")\n  + (wind) + \" mph wind, \"\n  + (cloud));\nreturn [msg, all];\n//}","outputs":"2","x":704,"y":173,"z":"c426c73b.3bd938","wires":[["703a5f60.8fc5a"],["6911dc3.f96ee24"]]},{"id":"94e47347.6b1b9","type":"debug","name":"","active":true,"complete":false,"x":601,"y":112,"z":"c426c73b.3bd938","wires":[]},{"id":"dfc993bd.20367","type":"json","name":"","x":556,"y":180,"z":"c426c73b.3bd938","wires":[["cddaa26a.32256"]]},{"id":"6911dc3.f96ee24","type":"debug","name":"","active":true,"complete":false,"x":881,"y":212,"z":"c426c73b.3bd938","wires":[]},{"id":"12850d0a.ed7af3","type":"sensorTag","name":"sensorTag","topic":"sensorTag","uuid":"","temperature":true,"humidity":true,"pressure":true,"magnetometer":true,"accelerometer":true,"gyroscope":true,"keys":true,"x":212,"y":236,"z":"ce89640f.317698","wires":[["b1e14e8f.4e1eb"]]},{"id":"1c5180fb.e3ae7f","type":"exec","command":"~/exercises/i2c/matrixLEDi2c","append":"","useSpawn":"","name":"","x":280,"y":167,"z":"f02878a0.0fd788","wires":[[],[],["7cd11e0a.832ee"]]},{"id":"7cd11e0a.832ee","type":"debug","name":"","active":true,"console":false,"complete":false,"x":492,"y":194,"z":"f02878a0.0fd788","wires":[]},{"id":"c471193c.3b8ee8","type":"sentiment","name":"","x":219,"y":75,"z":"f02878a0.0fd788","wires":[["845cdf0b.7ba32"]]},{"id":"845cdf0b.7ba32","type":"function","name":"Map to 1, 2, 3","func":"var number = msg.sentiment.score;\nvar demo = 2;\nif(number < -2) {\n\tdemo = 1;\n\t}\nelse if (number > 2) {\n\tdemo = 3;\n\t}\nmsg.payload = demo;\nnumber = {'payload': number};\nreturn [msg, number];","outputs":"2","x":384,"y":90,"z":"f02878a0.0fd788","wires":[["1c5180fb.e3ae7f"],[]]},{"id":"c2bf1cd2.3d40e","type":"debug","name":"","active":true,"console":"false","complete":"true","x":582,"y":86,"z":"f02878a0.0fd788","wires":[]}]