(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     55646,       1057]
NotebookOptionsPosition[     54870,       1026]
NotebookOutlinePosition[     55210,       1041]
CellTagsIndexPosition[     55167,       1038]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"2", "Pi", " ", "440", " ", "x"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{
      RowBox[{"-", "2"}], "/", "440"}], ",", " ", 
     RowBox[{"2", "/", "440"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.598984437526181*^9, 3.598984480729085*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwU2Xk8VO8XB3CJshSJIooUKtkiUuJQQsk2lojCjH3GMiOFFlv5oh1lCSkh
lES7OMlSRCFbkX03MzeFbOU3P/94fV7Xfe6555g7z3tGluxPcufm4uKS4uHi
+v9vlz1ymwwyGOi8sMT5IWD+49FHNncY6G/7oqiCkxOPB+l4JTNQu1Lg4wpO
VmGm1529xcBK4VaTL38JqD1f43A9noFHFJr3SC0S4CZMjN6/zsC6paw743ME
/MsUD35xhYGqsU3ndP8QkKyuv7IuloEykTVDolMEqFd53f4RzUAPm6/9vj8J
qLe9KT8ZxUDeQaVIUyYBHiOvn/FEMLDnGPProxECuEL6D0pcYCBfp9D4zX4C
7ggIft15loFoF9Qx30WAVpoGGYIZyCU/+GykjYBGZadJUhAD35dyJ9k3EsBj
9Vg41J+Br04fb6mpICCjvzXjKo2Bak/NvapeE6B96p/yPW8G1i/3CjR6SoBv
ksXRjxQGbktXCerIIIBvR3BnpwsD1yxllIwmEnD/TaYPcYKBc0mvZ8/HEdD2
YzJmvT0Dn7AEdLRPERDgLymhaMvAv9YL1054ESCw7GCuLomBt3+tTOJzIgDk
EqvdjjKwc5/bpZ8GBDz00eIu0Wfgna8Xb6zmI+DA4smbNboM3Cubq+wxy4au
q/9t/r6PgXf1etWNRtkg8rRDb5kmA58ZxzPSa9gQ+if0rMUOBup1yUgUnWeD
WGyWAEWBgZPihvtMfdhQKFmfcnorA0smWlj+dmwY0N30Kn0TA1WizfWPKbPh
6EWcmhBh4BfHs8E5rSwYXjcatSTEQI2X2ku3y1kQnrtGVHQVA89snysRzWXB
8zrXXftWMLAm7rx4yWkWSIvw+MXM05E+f0o7cQ0LJtNNRuQG6Lg+hXfzXlUm
vFrBEznXQ8fq+oayq0JMuOCPGz930TGlVmDalTUBqwy0SGfa6GjyyO3m5bwJ
UBjcWlZbS8du5dCCKakJcFJcivcrouOyl6arnoyNwZaEN8oHH9Mxo07b9nDF
GIwtBH0Uz6djzIrj73yTx+B0A/Pvuyw6nn0NE8cOjcHNgO9eokl0pJUdjatJ
GYWaF8/1Xp2no1zPCVKp8ghclaF/uxJKR8GlyF7rf8NgE6N0yvUMHWPD9+yO
+jwMfQ5ZeQJ0On48cCYlz3cYFhdviJ1wo+Nj4dWonDsEuw7SxpeZ0lHynOe5
rpWDkPZly21TCTpqqR4WD4ruhd8Xf07brqOj31DqxSSLXjiyr9zWZS0d79+x
/hEs0Qt/HjisC1pFx0/7XKL+kHqAFHojMYOLjsu/vDLUvPkD+OT/xU+OBmC3
id55ntlvEBT67XrS6wC8dNb+v6yzzWAufyN24HgAdrGfLWpvywFv25/Vi8cC
cGcKRNvr3oeLlyy519sGIGvu9V63nDR4M7TmrIlFAF5Rpi7qzsWCQs5N2uOD
Adhf97De0j4e/ykkWJxRCsB15hFJzjrP0NFKaef6RX9kmXWV+WXU4o2nzCyT
GX8c16TUtiTUYY3I441nf/qj6ma90ZaYT6jerCzUO+iPmsJ7ShLpDShgrTqZ
1+CPR4w917RlNOIbG/WXunf90TQ8oij6ZAtK2msfdD/gjzwyzTub7nZinof0
1w37/fHvSYtZTcku1A7ioXzW9EdcPfdbKrELbeMbI/fs8MfLmpX95OgfeKPe
6z3/Gk49y/bw3nPrwRUGKQaFP/yQybj9gSeqD29ZhDWR2/1Q4WqV/fvSPpQ7
6e4q3uSH7q5PBlSn+tDg7K6I8Co/FN12h7XerR/PPa99RyrwQ1jTTZqDAfy1
Yx7+BPth+6yQvfbIIEZo934pYPhh69XznhGSQ7jGuMbZheaH+fKeOlSzIVR2
iw+rdfbDG0UOdzYVD6FXhiLeMfLD4vOHogdPD2P3Wkc9fTE/3F3ktUWHNYK+
sgafp1b7IYu6KXm75Cguqm47mbfSD/VOKh7JMxrFDWa/z69d8EXudYSBa8Yo
2vx3uWywzxdVtEKX3zYZw7qF0v2xT3xx+N5jP9//xjEkq8YuL88Xox8KKpbk
j+N206aA2ixflHp8Zd2NhnGMTh1+wJ/si2YFocdXr53AA3tFVseF++I53/u8
K29P4GSv1Lb8UF8MtLqQ+ef5BGbGKBjUnfLF/ZTlVmdbJ/Bfu06QgLcvWkgZ
8O4TZeKb0x4/4qx80ehZXPJ/sUz0lqb/yTf1RWr4ypLlOUyUqDkr8umQLzb4
FWkIv2fi6XU3Dwnu88WN7fZFzbNMVH9W+vjyFl/0FDafWXJhYf7kmgtXftPw
fivXmTQpNjqkSCU/YtFwrRTv5h41NvIZKBTXj9AwSFtfpuAQGz1u6Ayv6qKh
ob525w9fNm5R9TC/WkVDru76T9mv2NjUFuD1uJyG3MK0NMU6NoZfOBvZ8IqG
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
DCLa
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{"ScalingFunctions" -> None},
  PlotRange->NCache[{{
      Rational[-1, 220], 
      Rational[1, 220]}, {-0.9999986633107022, 
     0.9999999999998684}}, {{-0.004545454545454545, 
    0.004545454545454545}, {-0.9999986633107022, 0.9999999999998684}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.598984173746937*^9, {3.5989844436202297`*^9, 
   3.598984481405162*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJytXQm8VtPePhqQoVSGQpdkuC6XzzVfl0pKSeZ5zpCSNJHMc0K6pi7SnEoR
TQplahJNGiVDGSpFk3SSnM63n7Wf/az1f9vvPufg9/u+3HefZ631rLXX+k/r
v9Zu1vzWlje0aX5rq+ua7396h+btWra6ruP+jdp2iB6V366gYLuWBQUF3+xf
gP9dHP1P/lMc/V9xK/xTUDDG/ad8QYsWLdz/wv+PjP/UN/5TleLC2cXdWrQo
BqSc+7di9G+3KrMLi/G3td3auv9dUM7hK+5VtH7e1Fe7tgdyavuur+41b31R
QYX8zfT3zaiq7d2zHaJ/N/Vb1LdTr879P628unB1r0/7d+7bqe+igk2usj9S
ZaXizV9/OeSu+w8btWwLnhy2ZdmoL++/a0ilrzdnVnmU+0+F8r//XnTGR1O/
6TxwwMyaq1b9cl78ePvffvv9ogkTvuz6/P+m7bB58+87s6Li4qJL1338dGGH
1q0Lyhe2xr8ftXv07e1XbIkrL5efaOXiwrk/PdX+8erTNzhs9eIN0398osPT
lecWphM9OKZSbd26Ted/8P5X148asWCnwsLfyLD62rWFl0QMOw4Z/GnFiGHc
n4L/c//ZvurPP/+6pukZfWdfd+1rX11y0ZDl554z8LCvv159TvznQ5YuXYM/
f9TyxjeWXHzh4EVXXDb0bz/8sGGPP0O/ItjXiRs48Lvv1v1yesM+H7Vs8cay
qO0vL714yB4RY7Z/xBdf/Li5Qf1eb3doP3pdk8Z9J93cemSVDRs2x+wLjnT/
2XG7rVu3vt2xw5v9Hnn4/e2Kiorw9Kq3xn3+zYUXDMKonBWzrbhlS9HHN7Z4
o/8jD72bvIAO0aisPOvM/rutX7+pYPe/cPYcGD/badOmLRi09q8MmZO0+UjP
Fz+Z3PqmkZhSBTG3HapHNL+74LyXr35zzCI8QZde6PbExFF33P5Wgelt+eZj
31z0Uasb33DF2fSEdreMnnn9tcPdr2bxs1ujro27reNYVJXgZt5w7fCuLzw/
zf2qnr3++izqd3u0/mZXwfqb3b9zn9v7fZ53/bG7j0XLYMAjD70XznG0P6F9
uzG3vDpsLrtbvtdjXT/o/tyzU0McXs935583sPuzz0xhXwuOiP+ElfXthecP
Om7hgpWJRNk3moY/nt2sf53vv19fcGb8bLdoNv8Yvc1DvvlmbYKrtfKHDavP
PKPfXqtXbyyoGkuqULIlEs11OvrbnkXrF0we/lgH/G1yh8eG77Hg53QpFs/g
8jV/+mkj2nT1E3fSnDnLt5xar2c0q35NuJ0ye9b3P5xz1sBdN27cnOAuHT9+
8ZKLLhyMrrOvSZevGjd20Vu3dnwzJhU/e6jXS588/2S3ie5X0/jZbdFb1ogT
9+xT/50MrPt1UH7qk1rfNGLYvfeMD8uO7Hz7uDbDX5sXtjGlVasRYzrdNjbE
je/QbswVb7+92P36p6G+oXGjPteOGbUwhGN08BYq//LL5oIz4mcVItm56bQG
verNnPk9J175g7/9dm00SgPciKRRPyB+VunXX7esPaNx32MXzP8hKXvi/Hk/
fHHZJUPchGcbWFdronarYX0Td87EiUuw/kLq8X/K/9/ixT9+fdEFg5wUiSdE
+SEP3D+hxaiRcXeaxM8aTv/kuwVXXT5UqyV6NrFN65FnT5q4JFwPadQvnTD+
C71Zlp1/9ZXDTvl09vKwjXbDhs59+aEH340lIYcsGpZl58UiOoc6lt7DL/X8
JKy22ZTJS99v22Z0WC0mS1ssxQB3zdixi0bcecfbJVF/s9Nt46BLwrKdBg/6
9MUnHp8YtvHJjTe8Xn/WzGUh7on/9fgIks/9OjymfriXEEujUf/HkiVrCnb0
Sx4vrka0vAoa+2eYRHuuWVOY4DCh1jc5va9bVmnUa8fPoOjWNm3SFxMnKQvR
sPLsZgOcJGUbByxbth4T0D3b0c+Kry65eEgKdUikz67kRKgUPxv04APv3vTG
6/Pdr9P9m8AECXEYzcuSJVQnP3WosleTZcqy0yKF/J85c1aEbUDgSzwQh2EF
fffrMEMdLwOTJoSf9+EHX0OThtX2fOKxDztCfQW457s98eHiyy95xVN3zEl4
+N13vQPSYYm7BvSf1a3Hcx+FNX/Y5uZRjadN+zbE/ffZZ6YCm0J4VqTg1OdK
/vXrtbJaGCpuKgW4/ZYvX/9Ts6b9yxUVbU0d6/3jZ3jta5IptlP87Igvv/wJ
Otz9ahQ/gxECOefaJQ4zXnKF1A/z4g803ayijQidCIvS/WoYPzvou2/XQdG5
X8R9eu01rx3z2WerwoWYRh1DM73F9a+7Xzv5lYXZvP/y5T8n1GEjwi4IcTtG
3UB3oEBzqF82/p0v3rjrzrdDSp1fHjgbLyqk3mrEGwteevyxD0Mcptc9/fvN
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
Bdv9P8e7rpw=\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"http", ":"}], "//", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"reference", ".", "wolfram", ".", "com"}], "/", "language"}], 
     "/", "ref"}], "/", "device"}], "/", 
   RowBox[{"GPIO", ".", "html"}]}]}]], "Input",
 CellChangeTimes->{{3.5989848789071417`*^9, 3.5989848789227533`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindDevices", "[", "\"\<GPIO\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.598984737804537*^9, 3.598984737825927*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["DeviceObject",
     "SummaryHead",
     Selectable->True], "[", 
    DynamicModuleBox[{Typeset`open$$ = True}, 
     PanelBox[
      PaneSelectorBox[{False->GridBox[{
         {
          TagBox[GridBox[{
             {""},
             {
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"]}
            },
            AutoDelete->False,
            BaselinePosition->{2, 1},
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{0.1}}}],
           
           "Grid"], 
          GraphicsBox[
           {Thickness[0.038461538461538464`], 
            {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
             FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
              3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {25.5, 
              1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 0.5}, {
              0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {1.395, 
              25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5, 
              24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
            {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
             JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
              3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {25.5, 
              1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 0.5}, {
              0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {1.395, 
              25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5, 
              24.605}, {25.5, 23.5}, {25.5, 2.5}}},
              CurveClosed->{1}]}, 
            {FaceForm[{RGBColor[
             0.45999999999999996`, 0.45999999999999996`, 
              0.45999999999999996`], Opacity[1.]}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
              11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
              20.542}, {11.020999999999999`, 20.542}}}]}, 
            {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
              15.979000000000001`, 16.541999999999998`}, {10.020999999999999`,
               16.541999999999998`}, {10.020999999999999`, 10.542}, {
              12.020999999999999`, 10.542}, {12.020999999999999`, 0.5}, {
              13.979000000000001`, 0.5}, {13.979000000000001`, 10.542}, {
              15.979000000000001`, 10.542}, {15.979000000000001`, 
              16.541999999999998`}}}]}},
           AspectRatio->Automatic,
           ImageSize->{Automatic, 
             Dynamic[3.5 CurrentValue["FontCapHeight"]]},
           PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
            {
             RowBox[{
              StyleBox["\<\"Class: \"\>",
               FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
              TagBox["\<\"GPIO\"\>",
               "SummaryItem",
               Selectable->True]}], 
             RowBox[{
              StyleBox["\<\"Id: \"\>",
               FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
              TagBox["1",
               "SummaryItem",
               Selectable->True]}]},
            {
             RowBox[{
              StyleBox["\<\"Status: \"\>",
               FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
              TagBox[
               DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}], 
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}]}, 
                Devices`DeviceAPI`DeviceDump`status$$ = {
                "Connected", "Latent"}, Devices`DeviceAPI`DeviceDump`d$$ = 
                DeviceObject[{"GPIO", 1}], 
                Devices`DeviceAPI`DeviceDump`ind$$ = 1}, 
                DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], StandardForm],
                 ImageSizeCache->{75., {4., 10.}}],
                DynamicModuleValues:>{}],
               "SummaryItem",
               Selectable->True]}], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           
           BaseStyle->{
            ShowStringCharacters -> False, NumberMarks -> False, 
             PrintPrecision -> 3, ShowSyntaxStyles -> False},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
           
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
        },
        AutoDelete->False,
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Rows" -> {{Top}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
         {
          TagBox[GridBox[{
             {""},
             {
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"]}
            },
            AutoDelete->False,
            BaselinePosition->{2, 1},
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{0.1}}}],
           
           "Grid"], 
          GraphicsBox[
           {Thickness[0.038461538461538464`], 
            {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
             FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
              3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {25.5, 
              1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 0.5}, {
              0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {1.395, 
              25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5, 
              24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
            {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
             JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
              3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {25.5, 
              1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 0.5}, {
              0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {1.395, 
              25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5, 
              24.605}, {25.5, 23.5}, {25.5, 2.5}}},
              CurveClosed->{1}]}, 
            {FaceForm[{RGBColor[
             0.45999999999999996`, 0.45999999999999996`, 
              0.45999999999999996`], Opacity[1.]}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
              11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
              20.542}, {11.020999999999999`, 20.542}}}]}, 
            {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
              15.979000000000001`, 16.541999999999998`}, {10.020999999999999`,
               16.541999999999998`}, {10.020999999999999`, 10.542}, {
              12.020999999999999`, 10.542}, {12.020999999999999`, 0.5}, {
              13.979000000000001`, 0.5}, {13.979000000000001`, 10.542}, {
              15.979000000000001`, 10.542}, {15.979000000000001`, 
              16.541999999999998`}}}]}},
           AspectRatio->Automatic,
           ImageSize->{Automatic, 
             Dynamic[3.5 CurrentValue["FontCapHeight"]]},
           PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
            {
             RowBox[{
              StyleBox["\<\"Class: \"\>",
               FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
              TagBox["\<\"GPIO\"\>",
               "SummaryItem",
               Selectable->True]}], 
             RowBox[{
              StyleBox["\<\"Id: \"\>",
               FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
              TagBox["1",
               "SummaryItem",
               Selectable->True]}]},
            {
             RowBox[{
              StyleBox["\<\"Status: \"\>",
               FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
              TagBox[
               DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}], 
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}]}, 
                Devices`DeviceAPI`DeviceDump`status$$ = {
                "Connected", "Latent"}, Devices`DeviceAPI`DeviceDump`d$$ = 
                DeviceObject[{"GPIO", 1}], 
                Devices`DeviceAPI`DeviceDump`ind$$ = 1}, 
                DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], StandardForm],
                 ImageSizeCache->{75., {4., 10.}}],
                DynamicModuleValues:>{}],
               "SummaryItem",
               Selectable->True]}], "\[SpanFromLeft]"},
            {
             TagBox["\<\"...\"\>",
              "SummaryItem",
              Selectable->True], ""}
           },
           AutoDelete->False,
           
           BaseStyle->{
            ShowStringCharacters -> False, NumberMarks -> False, 
             PrintPrecision -> 3, ShowSyntaxStyles -> False},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
           
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
        },
        AutoDelete->False,
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Rows" -> {{Top}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
       Typeset`open$$],
       ImageSize->Automatic],
      BaselinePosition->Baseline],
     DynamicModuleValues:>{}], "]"}],
   DeviceObject[{"GPIO", 1}],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.598984743259437*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"DeviceConfigure", "[", 
  RowBox[{"\"\<GPIO\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"14", "\[Rule]", "\"\<Output\>\""}], ",", 
     RowBox[{"4", "\[Rule]", "\"\<Input\>\""}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.598984946310134*^9, 3.598984946325439*^9}, {
  3.5989851138645353`*^9, 3.5989851359654493`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["WiringPi4"], "Input",
 CellChangeTimes->{{3.598985085283538*^9, 3.598985096345317*^9}}],

Cell[BoxData["WiringPi4"], "Output",
 CellChangeTimes->{{3.598985090739848*^9, 3.598985097447728*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"Pi", ",", " ", "10000000"}], "]"}], ";"}], " ", "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.5989851557655354`*^9, 3.598985197024816*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"142.165997000000004391`8.173395648343295", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.598985171065579*^9, 3.598985190718603*^9}, 
   3.598985341218103*^9}]
}, Open  ]]
},
WindowSize->{808, 877},
WindowMargins->{{128, Automatic}, {-18, Automatic}},
FrontEndVersion->"10.0 for Linux ARM (32-bit) (November 19, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 372, 10, 32, "Input"],
Cell[955, 34, 40142, 669, 240, 22347, 375, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[41112, 706, 342, 10, 32, "Input"],
Cell[CellGroupData[{
Cell[41479, 720, 141, 2, 32, "Input"],
Cell[41623, 724, 12151, 262, 85, "Output"]
}, Open  ]],
Cell[53789, 989, 360, 8, 32, "Input"],
Cell[CellGroupData[{
Cell[54174, 1001, 101, 1, 32, "Input"],
Cell[54278, 1004, 102, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54417, 1010, 224, 6, 32, "Input"],
Cell[54644, 1018, 210, 5, 32, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
